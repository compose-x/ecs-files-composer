[tool.poetry]
name = "ecs_files_composer"
version = "0.4.1"
description = "Files and configuration handler to inject configuration files into volumes for ECS containers"
authors = ["John Preston <john@compose-x.io>"]
license = "MPL-2.0"
classifiers=[
        "Development Status :: 2 - Pre-Alpha",
        "Intended Audience :: Developers",
        "Natural Language :: English",
        "Programming Language :: Python :: 3",
        "Programming Language :: Python :: 3.7",
        "Programming Language :: Python :: 3.8",
        "Programming Language :: Python :: 3.9",
        "Intended Audience :: System Administrators",
        "Intended Audience :: Information Technology",
        "License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)"
    ]
readme = "README.rst"
keywords=["aws", "ecs", "k8s", "secrets", "docker"]

[tool.poetry.dependencies]
python = "^3.7"
boto3 = "^1.18"
pydantic = {extras = ["email"], version = "^1.8.2"}
pyOpenSSL = "^20.0.1"
requests = "^2.26.0"
PyYAML = "^5.4.1"
Jinja2 = "^3.0.1"
jsonschema = "^3.2.0"
compose-x-common = {extras = ["aws"], version = "^0.1.0"}

[tool.poetry.dev-dependencies]
placebo = "^0.9.0"
datamodel-code-generator = {extras = ["http"], version = "^0.11.9"}
Sphinx = "^4.1.2"
black = "^21.7b0"
isort = "^5.9.3"
sphinx-material = "^0.0.34"
coverage = "^5.5"
behave = "^1.2.6"
pytest = "^6.2.4"
flake8 = "^3.9.2"
watchdog = "^2.1.3"
pre-commit = "^2.13.0"
tbump = "6.3.1"

[tool.poetry.scripts]
files_composer = "ecs_files_composer.cli:main"
ecs_files_composer = "ecs_files_composer.cli:main"


[tool.datamodel-codegen]
field-constraints = true
snake-case-field = true
strip-default-none = false
target-python-version = "3.8"

[tool.black]
skip-string-normalization = true
line-length = 120

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
line_length = 100
known_first_party = "kelvin"

[tool.tbump]
github_url = "https://github.com/compose-x/ecs-files-composer"

[tool.tbump.version]
current = "0.4.1"

# Example of a semver regexp.
# Make sure this matches current_version before
# using tbump
regex = '''
  (?P<major>\d+)
  \.
  (?P<minor>\d+)
  \.
  (?P<patch>\d+)
  (?:[-.](?P<rc>[\S]+))?
  '''

[tool.tbump.git]
message_template = "Bump to {new_version}"
tag_template = "v{new_version}"

# For each file to patch, add a [[tool.tbump.file]] config
# section containing the path of the file, relative to the
# tbump.toml location.
[[tool.tbump.file]]
src = "pyproject.toml"

[[tool.tbump.file]]
src = "ecs_files_composer/__init__.py"
[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
